#1. Write a program to find the length of the string without using inbuilt function (len)
from re import findall
from time import sleep

s = "without"

"""str_len = findall(r"[a-zA-Z]",s)
print(len(str_len))
"""
"""count = 0
for i in s:
    count+=1
    
print(count)"""


#2. Write a program to reverse a string without using any inbuilt functions.

t = "program"

"""rev = ''
for i in t:
    rev = i + rev
print(rev)
"""

#print(t[::-1])


#3. Write a program to replace one string with another. e.g. "Hello World" replace "World" with "Universe".

r = "Hello World"
"""replace_str = r.split()
replace_str[1] = "Universe"

print(" ".join(replace_str))

"""
#print(r.replace("World","Universe"))


#4. How to convert a string to a list and vice-versa.

b = "convert"
"""print(list(b))

print("".join(list(b)))


"""


#5.Convert the string "Hello welcome to Python" to a comma separated string.

#print("Hello welcome to Python".replace(" ",","))

#p = "Hello welcome to Python"

#print(",".join(p.split()))

"""
f = ""
for i in p:
    if i == " ":
        f += ","
    else:
        f += i
print(f)
"""



#6. Write a program to print alternate characters in a string.

"""
x = "PycharmProjects"
print(x[1::2])

g = [j for i,j in enumerate(x) if i % 2 !=0]
print("".join(g))
"""
"""
for i , j in enumerate(x):
    if i % 2 != 0:
        g += j
else:
        g += ""
print(g)
"""


#7. Write a Program to print ascii values of the characters present in a string.

"""
k = "Program"
for i in k:
    print(ord(i),end=" ")
    
"""


#8. Write program to convert upper case to lower case and vice-versa without using inbuilt method.
"""
g = "SeleniumPython"

convert_case = ""

for i in g:
#    if "a" < i < "z":
    if ord(i) in range(ord("a"),ord("z")+1):
        convert_case = convert_case + chr(ord(i) - 32)
    elif ord(i) in range(ord("A"), ord("Z") + 1):
#    elif "A" < i < "Z":
        convert_case = convert_case + chr(ord(i) + 32)
    else:
        convert_case += i

print(convert_case)

"""



#9. Write program to swap two numbers without using 3rd variable.

"""a = 2
c = 3

a,c = c,a
print(a)
print(c)
"""

#10. Write program to merge two different lists.
"""
l1 = [1,2,3,4,5]
l2 = [6,7,8,9]

print(l1+l2)

l1.extend(l2)
print(l1)
"""

#11. Write program to read a random line in a file. (ex. 50, 65, 78th line)

"""def random_line(lineno):
    with open("sample.log") as file:
        for no,line in enumerate(file,start=1):
            if lineno == no:
                if line.strip():
                    print(line)

random_line(62)
"""



#50 Write a program to reverse the list as below

"""
words = ["hi", "hello", "python"]
reversed_list = [word[::-1]for word in words[::-1]]
print(reversed_list)

"""



#51 Write a program to update the tuple

"""
t1 = (1, 2, 3, 4)
t2 = (100, 200, 300)
t1 = t1 + t2
print(t1)

"""


#52 Write a program to replace value present in nested dictionary.

"""
d = {'a': 100, 'b': {'m': 'man', 'n': 'nose', 'o': 'ox', 'c': 'cat'}}

for key, value in d.items():
    if isinstance(value, dict):
        for i, j in value.items():
            if j == "nose":
                value[i] = "net"

print(d)
"""


#53 Write a program to count the number of white spaces in a file.

"""
with open("sample.log") as file:
    spaces = 0
    for line in file:
        for i in line:
            if i == " ":
                spaces += 1
                
print(spaces)
              """
"""
with open("sample.log") as file:
    spaces = 0
    for line in file:
            spaces += line.count(" ")

print(spaces)

"""



#54 Grouping anagrams
"""
words = ['eat', 'ate', 'tea', 'hello', 'silent', 'listen']

d = {}
for i in words:
    key = tuple(sorted(i))
    if key not in d:
        d[key] = [i]
    else:
        d[key].append("".join(i))

print(d)

"""


#59 Write a list comprehension to get a list of even numbers from 1-50

"""
print([i for i in range(1,50) if i % 2 == 0])
print(list(range(0,50,2)))
"""

#60 Find the longest non-repeated substring in the below string

sentence = "This is a Programming language and Programming is fun"


#longest_string = max(sentence.split(),key=len)
"""
s1 = []
for word in sentence.split():
    if sentence.split().count(word) != 2:
        s1.append(word)
print(max(s1,key=len))
"""



#61 Write a program to find the duplicate elements in the list without using inbuilt functions

"""
names = ['apple', 'google', 'apple', 'yahoo', 'google']
dup_name = []
non_dup = []


for name in names:
    if name not in non_dup:
        non_dup += [name]
    else:
        dup_name += [name]
        
print(dup_name)

"""


"""
d = {}

for name in names:
    if name not in d:
        d[name] = 1
    else:
        d[name] += 1
print(d)

dup_list = []
for key,value in d.items():
    if value > 1:
        dup_list += [key]

print(dup_list)
        

"""



#62 Write a program to count the number occurrences of each item in the list without using any inbuilt functions

"""

names = ['apple', 'google', 'apple', 'yahoo', 'google', 'facebook', 'gmail', 'yahoo']

d = {}

for name in names:
    if name not in d:
        d[name] = 1
    else:
        d[name] += 1
print(d)
    

"""


#63 Write a function to check if the number is Prime

"""

def prime_num(num):
    if num > 1:
        for i in range(2,num//2+1):
           if num % i == 0:
               return False
           return True
            
                        
print(prime_num(5))

print([n for n in range(50) if prime_num(n)])
        
"""




#65 Write a program to find the largest number in the list without using any inbuilt functions

"""
numbers = [10, 20,70,5, 30, 40, 50]

largest_num = numbers[0]

for i in numbers:
    if i > largest_num:
        largest_num = i

print(largest_num)


smallest_num = numbers[0]

for i in numbers:
    if i < smallest_num:
        smallest_num = i

print(smallest_num)

"""



#66 Write a method that returns the last digit of an integer. For example, the call of get_last_digit(3572) should return 2.


"""def get_last_digit(num):
    last_digit = num % 10
    return last_digit

print(get_last_digit(5452567))
"""
"""def get_last_digit(num):
    return str(num)[-2]

print(get_last_digit(1864868))
"""


#67 Write a program to find most common words in a given list.
words = [
'look', 'into', 'my', 'eyes', 'look', 'into', 'my', 'eyes',
'the', 'eyes', 'the', 'eyes', 'the', 'eyes', 'not', 'around', 'the', 'eyes', "don't", 'look', 'around',
'the',
'eyes', 'look', 'into','my', 'eyes', "you're", 'under'
]
"""
from collections import Counter

d = {}

for word in words:
    count = 0
    if word not in d:
        d[word] = 1
    else:
        d[word] += 1
        count += 1


c = Counter(d)
print(c.most_common())

"""



"""
d = {}

for word in words:
    count = 0
    if word not in d:
        d[word] = 1
    else:
        d[word] += 1
        count += 1

print(d)

common_words = []

for i,j in d.items():
    if j > 1:
        common_words.append(i)

print(common_words)
"""


#68 Make a function named tail that takes a sequence (like a list, string, or tuple) and a number
# n and returns the last n elements from the given sequence, as a list.

"""
def tail(sequence,n):
    if isinstance(sequence,(str,tuple,list)):
        return [sequence[-n:]]
    return "invalid sequence"

print(tail(5486,4))


"""



#69 Write function named is_perfect_square that accepts a number and returns True if it's a
# perfect square and False if it's not.
"""l1 = []

def is_perfect_square(n):
    left, right = 0, n
    while left <= right:
        mid = (left + right) // 2
        if mid * mid == n:
            return True
        elif mid * mid < n:
            left = mid + 1
        else:
            right = mid - 1
    return False
print(is_perfect_square(36))

l = [24, 16,81,23,64]

for i in l:
    if is_perfect_square(i):
        l1.append(i)

print(l1)
"""


"""
def is_perfect_square(n):
    i = 1
    while i * i <= n:
        if i * i == n:
            return True
        i += 1
    return False
print(is_perfect_square(64))

"""
"""
from math import sqrt

def perf_sqr(n):
    sqr_num = sqrt(n)
    if sqr_num.is_integer():
        return "perfect square"
    return "not a perfect square"
    
print(perf_sqr(27))

"""



#70 Write a program to get all the duplicate items and the number of times the item is repeated in the list.

"""
names = ['apple', 'google', 'apple', 'yahoo', 'yahoo', 'facebook', 'apple', 'gmail', 'gmail','gmail', 'gmail']

d = {}
for name in names:
    if name not in d:
        d[name] = 1
    else:
        d[name] += 1
        
print(d)        
        
l1 = []       
for key, value in d.items():
     if value > 1:
         l1.append(key)
         
print(l1)

"""



#71 Write a program to count the number of occurrences of each word in a file.
"""
d = {}

with open("sample.log") as file:
    for line in file:
        if line.strip():
            for word in line.split():
                if word not in d:
                    d[word] = 1
                else:
                    d[word] += 1

print(d)
"""

#program to count the no of lines in a file

"""
with open("sample.log") as file:
    count = 0
    for line in file:
        if line.strip():
            count += 1
print(count)
"""



#72 Write a program to count the number of occurrences of vowels in a file.
"""
d = {}
with open("sample.log") as file:
    for line in file:
        if line.strip():
            for letter in line:
                if letter in "aeiouAEIOU":
                    if letter not in d:
                        d[letter] = 1
                    else:
                        d[letter] += 1
print(d)

"""

"""
from  collections import defaultdict

d = defaultdict(int)

with open("sample.log") as file:
    for line in file:
        if line.strip():
            for letter in line:
                if letter in "aeiouAEIOU":
                    d[letter] += 1
                    
print(d)

"""



#73 Write a program to print all numeric values in a list
items = ['apple', 1.2, 'google', '12.6', 26, '100']

"""
items = ['apple', 1.2, 'google', '12.6', 26, '100']

# for i in items:
#     if isinstance(i,(int,float)):
#         print(i)
        
        
for j in items:
    if type(j) in (int,float):
        print(j)
"""


#74 Triangle Patterns

"""
*
* *
* * *
* * * *
* * * * *

"""
"""
for i in range(1,6):
    print(f'{"* " * i:<10}')
    
    """

#left justified inverted triangle

"""
* * * * * 
* * * *   
* * *     
* *       
*      
"""


"""for i in range(1,6)[::-1]:
    print(f'{"* " * i:<10}')"""



#right justified triangle
"""
        *
      * * 
    * * * 
  * * * * 
* * * * * 
 
"""

"""
for i in range(1, 6):
    print(f'{"* " * i:>10}')
"""

#right justified inverted triangle

"""

* * * * * 
  * * * * 
    * * * 
      * * 
        * 
"""

"""
for i in range(1, 6)[::-1]:
    print(f'{"* " * i:>10}')

"""


#center justified

"""
    *     
   * *    
  * * *   
 * * * *  
* * * * *
"""

"""
for i in range(1, 6):
    print(f'{"* " * i:^10}')
"""



##center justified inverted

"""
* * * * * 
 * * * *  
  * * *   
   * *    
    *  

for i in range(1, 6)[::-1]:
    print(f'{"* " * i:^10}')    
"""


#number left justified

"""
1         
1 2       
1 2 3     
1 2 3 4   
1 2 3 4 5 


pattern = ""

for i in range(1,6):
    pattern = pattern + str(i) + " "
    print(pattern)

"""

#number right justified

"""
        1 
      1 2 
    1 2 3 
  1 2 3 4 
1 2 3 4 5 

pattern = ""
for num in range(1, 6):
	pattern = pattern + str(num) + " "
	print(f'{pattern:>10}')

"""


#center justified

"""
   1     
   1 2    
  1 2 3   
 1 2 3 4  
1 2 3 4 5 


pattern = ""
for num in range(1, 6):
	pattern = pattern + str(num) + " "
	print(f'{pattern:^10}')

"""



#75 Write a program count the occurrence of a particular word in the file
"""
def occurrence(pattern):
    with open("sample.log") as file:
        count = 0
        for line in file:
            if line.strip():
                for word in line.split():
                    if word == pattern:
                        count += 1
        print(count)

occurrence("INFO")

"""
"""
def occurrence(pattern):
    with open("sample.log") as file:
        count = 0
        for line in file:
            if line.strip():
                for word in line.split():
                    if word == pattern:
                        count += line.split().count(word)
        print(count)

occurrence("INFO")
"""


#76 Write a program to map a product to a company and build a dictionary with company and list of products pair
"""
all_products = ['iPhone', 'Mac', 'Gmail', 'Maps', 'iWatch', 'Windows','iOS', 'Google Drive', 'One Drive']


apple_products = {'iPhone', 'Mac', 'iWatch'}
google_products = {'Gmail', 'Maps', 'Google Drive'}
msft_products = {'Windows', 'One Drive'}


brands = {"apple_products": [], "google_products":[],"msft_products":[]}
no_brand ={"unclassified_brand":[]}

for product in all_products:
    if product in apple_products:
        brands["apple_products"].append(product)
    elif product in google_products:
        brands["google_products"].append(product)
    elif product in msft_products:
        brands["msft_products"].append(product)
    else:
        no_brand["unclassified_brand"].append(product)

print(brands)
print(no_brand)


"""


"""
from collections import defaultdict

d = defaultdict(list)

for product in all_products:
    if product in apple_products:
        d["apple_products"] += [product]

    elif product in google_products:
        d["google_products"] += [product]

    else:
        d["msft_products"] += [product]

print(d)
"""



#77 Write a program to rotate items of the list

names = ["apple", "google", "yahoo", "gmail", "facebook", "flipkart", "amazon"]


"""

def _rotate(iterable,n):
    for _ in range(n):
        item = iterable.pop()
        iterable.insert(0,item)
    return iterable

print(_rotate(names,2))

"""


"""
def rotate_(lst,n):
        rotated_list = lst[-n:] + lst[:-n]
        return rotated_list

print(rotate_(names,3))
"""

"""
def rotate_(lst,n,direction ="right"):
        if direction == "right":
            rotated_list = lst[-n:] + lst[:-n]
        elif direction == "left":
            rotated_list = lst[n:] + lst[:n]
        else:
            raise ValueError("invalid error")

        return rotated_list

print(rotate_(names,3,direction="left"))

"""


#78 Write a program to rotate characters in a string


"""
def rotate_char(iterable,n):
    rotated = iterable[-n:] + iterable[:-n]
    return rotated

print(rotate_char("Helloworld",3))

"""

#79 Write a program to count the number of white spaces in a given string

sentence = "Hello world welcome to Python Hi How are you. Hi how are you"

#
# no_spaces = findall(r"\s",sentence)
#
# print(len(no_spaces))

"""
def no_spaces(some_string):
    count = 0
    for i in some_string:
        if i == " ":
            count += 1
    print(count)

no_spaces(sentence)

"""



#80 80 Write a program to print only non-repeated characters in a string

st = 'helloworld'
repeate_char = []
non_repeated_char = []

for i in st:
    if i not in non_repeated_char:
        non_repeated_char.append(i)
    else:
        repeate_char.append(i)

# print(non_repeated_char)
# print(repeate_char)




#82 Write a program to print all the consonants in a given string

word = 'helloworld'
consonants = []
for i in word:
    if i not in "aeiouAEIOU":
        consonants.append(i)
#print(consonants)



#83 Write a program to count the number of commented lines in a text file

with open()
















#
# class A:
#     def sampale(self):
#         print("some text")
#
# class B(A):
#     def sampale(self, a=0,b=0):
#         if a!=0 and  b!=0:
#             print(f"next text {a} and {b} ")
#         elif a!=0 :
#             print(f"next text  {a} ")
#         elif b!=0:
#             print(f"next text  {b} ")
#
# b = B()
# b.sampale(b=6)




"""
from selenium.webdriver.chrome.webdriver import WebDriver
from time import sleep

driver = WebDriver()
driver.get("https://www.amazon.in/")
driver.maximize_window()

search_box = driver.find_element("id","twotabsearchtextbox")
search_box.send_keys("iphone")
search_button = driver.find_element("id","nav-search-submit-button")
search_button.click()
sleep(5)

iphones = driver.find_elements("xpath",'//span[@class="a-size-medium a-color-base a-text-normal"]')

iphones_list = [iphone.text for iphone in iphones]

print(iphones_list)
"""




"""
s = "I am from Bengaluru"
#o/p = Bengaluru am From I

t = (s.split())
t1 = []
last = t.pop()
first = t.pop(0)
t.insert(0,last)
t.append(first)
print(" ".join(t))
"""

"""
#remove duplicates

a = [2,4,5,5,4,6,9]
#type casting
print(set(a))

#1st method
a1 = []

for i in a:
    if i not in a1:
        a1.append(i)
print(a1)

#2nd method
for i in a:
    if a.count(i) > 1:
        a.remove(i)
print(a)

"""































































# students = [
#     {"name": "Alice", "age": 20, "major": "Physics"},
#     {"name": "Bob", "age": 21, "major": "Mathematics"},
#     {"name": "Charlie", "age": 22, "major": "Biology"}
# ]
#
#
# # def get_age(item):
# #     return item["major"]
# #
# # sort_major = sorted(students,key=get_age)
# # print(sort_major)
#
# t = sorted(students,key=lambda student:student["major"],reverse=True)
#
# print(t)
###########################################################################################################

#####regular expression###########



#from re import findall

# pattern = findall("hello","hello how  are you ganesh hello")
# print(pattern)

# pattern = findall("sep[ea]rated","the [age is seperated from the book separated")
#
# print(pattern)


# pattern = findall("[aeiou]","hello dash how are you")
# print(len(pattern))

# P = findall("[abcd]","hi ganesh how are you")
# print(P)
#


# number = findall("[1234567890]", "the cost of the computer RS.2563 ")
# number1 = findall("[0-9]", "the cost of the computer RS.2563 ")
# print(number1)


# heading = "<h1>ganesh testyantra</h1>, <h6>ganesh testyantra</h6> <h3>ganesh testyantra</h3>"
# p = findall(r"<h[0-9]>",heading)
# print(p)

#
# st = "546 python 532 programming 6545 languge  66 dfhf 523 65"
#
# p = findall(r"[^\w]",st)
# print(len(p))


# sentence = "     thi sis a sentence        "
#
# p = findall(r"\s", sentence)
#
# leading_spaces = findall(r"^\s+",sentence)
# trailing_spaces = findall(r"\s+$",sentence)
#
# print(len(leading_spaces[0]))
# print(len(trailing_spaces[0]))

# mobile_no = "+91 22 1234 5678 bhdsdhas nudhsad hdjasdj +91 98 1234 5658"
#
# m = findall(r"\+91.\d{2}.\d{4}.\d{4}",mobile_no)
#
# print(m)
# #
# w = "hello how are you  what is your name"
#
# p = findall(r"\b\w{3}\b",w)
#
# print(p)













""""
from selenium.webdriver.chrome.webdriver import WebDriver

driver = WebDriver()

driver.get("https://www.demoblaze.com/")
driver.maximize_window()

#p_names = driver.find_elements("xpath",'//a[@class="hrefch"]')
sleep(3)
p_names = driver.find_elements("class name","card-block")
d={}
for i in p_names:
    d[i.find_element("class name","card-title").text] = i.find_element("tag name","h5").text
print(d)
"""





































